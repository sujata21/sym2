security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Application\Sonata\UserBundle\Entity\User: sha1

    role_hierarchy:
        ROLE_ALCHEMY:     ROLE_USER
        ROLE_GROUP_EDITOR: ROLE_ALCHEMY
        ROLE_EDITOR:      [ROLE_USER, ROLE_CAN_UPLOAD_FILE, CAN_VIEW_NON_PUBLISHED]          
        ROLE_ADMIN:       [ROLE_USER, ROLE_EDITOR, ROLE_CAN_UPLOAD_FILE, CAN_VIEW_NON_PUBLISHED, ROLE_SONATA_ADMIN,ROLE_GROUP_EDITOR,ROLE_ALCHEMY]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_CAN_UPLOAD_FILE, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]        
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT

    # providers:
    #     fos_userbundle:
    #         id: fos_user.user_manager
    #     in_memory:
    #         memory:
    #             users:
    #                 user:  { password: userpass, roles: [ 'ROLE_USER' ] }
    #                 admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    providers:
        chain_provider:
            chain:
                providers: [in_memory, ldap_userbundle ]

        fos_userbundle:
            id: fos_user.user_provider.username

        ldap_userbundle:
            id: application_ldap_user_provider.username

        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        # secured_area:
        #     pattern:    ^/demo/secured/
        #     form_login:
        #         check_path: _security_check
        #         login_path: _demo_login
        #     logout:
        #         path:   _demo_logout
        #         target: _demo
        #     #anonymous: ~
        #     #http_basic:
        #     #    realm: "Secured Demo Area"

        secured_area:
            pattern:    ^/
            anonymous: ~
            ldap-login:
                provider: chain_provider
                csrf_provider: form.csrf_provider
                success_handler: application_user.component.authentication.handler.login_success_handler
            logout:       true
            anonymous:    true
            form_login:
                login_path:  /login
                check_path:  /login_check
                success_handler: application_user.component.authentication.handler.login_success_handler
                failure_path:   null
            logout:
                path:   /logout
                target: /
                success_handler: application_user.component.authentication.handler.logout_success_handler

        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
            anonymous:          true
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
            logout:             true
            anonymous:          true
            switch_user: true
            
    access_control:
        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_USER] }
        - { path: ^/admin/dashboard, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/efconnect, role: ROLE_USER }
        - { path: ^/elfinder, role: ROLE_USER }
    acl:
        connection: default
        